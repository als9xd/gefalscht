<div class="row mt-4">
  <div class="col">
    <div class="container-fluid">
      <div class="row">
        <div class="col">
          <h3>Popular Videos</h3>
        </div>
      </div>
      <div class="row flex-row flex-nowrap">
        {{#each trendingVideos}}
        <div class="col-3">
            <div class="card card-block">
              <img class="card-img-top" src="{{this.thumbnail_url}}" alt="Card image cap">
              <div class="card-body">
                <h5 class="card-title text-center"><a href="https://www.youtube.com/watch?v={{this.id}}">{{this.title}}</a></h5>
                <div class="row">
                  <div class="col text-right">
                    <small><script>document.write(moment('{{this.upload_date}}').format('YYYY-MM-DD hh:mm:ss a'))</script></small>
                  </div>
                </div>
              </div>
            </div>
        </div>
        {{/each}}
      </div>
    </div>
  </div>
</div>
<div class="row">
  <div class="col">
    <div class="row">
      <div class="col">
        <h3>Site Usage</h3>
      </div>
    </div>
    <div class="row">
      <div class="col">
        <canvas id="audits-chart" width="400" height="400"></canvas>
      </div>
    </div>
  </div>
</div>
<script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.7.3/Chart.bundle.min.js"></script>
<script>
  const auditsBlob = decodeURIComponent("{{{videoAudits}}}");
  const audits = auditsBlob === ''?null:JSON.parse(auditsBlob).map(a => moment(a.audit_date).startOf('hour'));
  let auditsHash = {};
  for(let i = 0; i < audits.length;i++){
    const k = audits[i];
    if(typeof auditsHash[k] === 'undefined'){
      auditsHash[k] = 1;
    }else{
      auditsHash[k]++;
    }
  }
  auditsHash = Object.keys(auditsHash).map(key=>{return {x:key,y:auditsHash[key]}});
  const ctx = $('#audits-chart');
  const chart = new Chart(ctx, {
    type: 'line',
    data: {
        datasets: [
            {
                label: 'Audits',
                data: auditsHash,
                fill: false,
                borderColor: 'red'
            },
        ]
    },
    options: {
       scales: {
           xAxes: [{
               type: 'time',
               time: {
                 unit: 'hour',
                    displayFormats: {
                       quarter: 'hA'
                   }
               }
           }]
       }
   }
  });
</script>
